//=======================================================
// Mixins
//=======================================================

// Clearfix
@mixin clearfix {
  &:after {
    content: '';
    display: table;
    clear: both;
  }
}

// Kellum method image replacement
// @see http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/
@mixin image-replace {
  text-indent: 100%;
  overflow: hidden;
  white-space: nowrap;
}

// SVG Background with fallback
@mixin background-svg($background-url) {
  $background-url-png: str-replace($background-url, '.svg', '.png');
  background-image: url($background-url-png);
  background-image: url($background-url), none;
}

// Content padding for the site layouts
@mixin content-padding {
  padding: $content-padding--mobile;

  @include breakpoint ($bp-md) {
    padding: $content-padding;
  }
}

@mixin content-padding--horizontal {
  padding: $content-padding--horizontal--mobile;

  @include breakpoint ($bp-md) {
    padding: $content-padding--horizontal;
  }
}

@mixin content-padding--vertical {
  padding: $content-padding--vertical--mobile;

  @include breakpoint ($bp-md) {
    padding: $content-padding--vertical;
  }
}

@mixin toggle-closed($max-height: 600px) {
  overflow: hidden;
  max-height: $max-height;
  transition: all ease-in-out 0.25s;

  &.closed {
    max-height: 0;
    padding-top: 0;
    padding-bottom: 0;
    border: none;

    @include breakpoint ($bp-sm) {
      max-height: $max-height;
    }
  }
}

// Makes an element hidden, and disables visibility.
// Used for elements that need to be totally hidden.
@mixin hide-visibility {
  display: none;
  visibility: hidden;
}

// Turns off the hide-visibility effect
@mixin hide-visibility-off($display-mode: block) {
  display: $display-mode;
  visibility: visible;
}

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off($position: relative) {
  position: $position !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

// Helper function for working with Sass maps.
// Example: @include print($configuration);
@mixin print($declarations) {
  @each $property, $value in $declarations {
    #{$property}: $value;
  }
}

// Vertically center a font by setting the font
// size to 50% and the top position to -35%
@mixin font-vcenter {
  position: relative;
  font-size: 0.5em;
  top: -0.35em;
}

// Mixin to add a border to active links. This
// should be used on a parent element, like an
// article or aside that needs link borders
@mixin active-link-border {
  a {
    &:focus,
    &.focus,
    &.active,
    &:active {
      border-bottom: 2px solid;
    }
  }
}